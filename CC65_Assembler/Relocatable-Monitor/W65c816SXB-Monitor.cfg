# Define the memory regions and peripherals of the W65c816SXB.
MEMORY
{
    RAM:        start=$0000,    size=$7F00, type=rw;
    XCS0:       start=$7F00,    size=$0020, type=rw;
    XCS1:       start=$7F20,    size=$0020, type=rw;
    XCS2:       start=$7F40,    size=$0020, type=rw;
    XCS4:       start=$7F60,    size=$0020, type=rw;
    ACIA:       start=$7F80,    size=$0020, type=rw;
    PIA:        start=$7FA0,    size=$0020, type=rw;
    VIA_USR:    start=$7FC0,    size=$0020, type=rw;
    VIA_USB:    start=$7FE0,    size=$0020, type=rw;
    FLASH:      start=$8000,    size=$8000, type=ro, file=%O, fill=yes, fillval=$FF;
}

# Only one segment, and everything gets put into it. It's read-only.
SEGMENTS
{
    # Define the zero-page segment. We're free to use it all.
    ZEROPAGE: load=RAM, type=zp, start=$0000;

    # Load the monitor code at the beginning of flash.
    CODE: load=FLASH, type=ro;

    # CPU vectors are always located at this area in flash.
    CPU_VECTORS: load=FLASH, type=ro, start=$FFE0;

    # Memory used by the monitor which is unavailable to the application.
    WORK_RAM: load=RAM, type=bss, start=$7E00;

    # Raw vectors are not typically set by the user.
    RAW_VECTORS: load=RAM, type=bss, start=$7E70;

    # Shadow vectors that the user may set.
    SHADOW_VECTORS: load=RAM, type=bss, define=yes, start=$7EE4;

    # The VIA used for the USB debugging port.
    VIA_USB: load=VIA_USB, type=bss;
}